events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Upstream for CID app
    upstream cid_app {
        server app:5000;
    }

    # HTTP server - Redirect to HTTPS for security
    server {
        listen 80;
        server_name cid-staging.tspolice.gov.in cid.tspolice.gov.in localhost cid-telangana.local;

        # Host Header Validation - Block requests with invalid Host headers
        if ($host !~* ^(cid-staging\.tspolice\.gov\.in|cid\.tspolice\.gov\.in|localhost|127\.0\.0\.1|cid-telangana\.local|.*\.replit\.app|.*\.replit\.dev)$) {
            return 403;
        }

        # Security: Redirect all HTTP traffic to HTTPS (except localhost in development)
        # This prevents man-in-the-middle attacks and ensures encrypted communications
        if ($host !~* ^(localhost|127\.0\.0\.1)$) {
            return 301 https://$server_name$request_uri;
        }

        # Development mode: Allow HTTP for localhost only
        # Block insecure HTTP methods (CWE-749)
        if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS)$ ) {
            return 405;
        }

        # Block TRACE and TRACK methods specifically
        if ($request_method ~ ^(TRACE|TRACK)$ ) {
            return 405;
        }

        # Security headers for HTTP (development only)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; connect-src 'self'; media-src 'self';" always;
        add_header Allow "GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS" always;
        
        # CORS Security - Never set Access-Control-Allow-Origin to *
        # Let the application handle CORS with strict whitelist validation
        # Remove any wildcard CORS headers
        add_header X-Content-Security-Policy "default-src 'self'" always;

        # Root location - proxy to Node.js app
        location / {
            proxy_pass http://cid_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://cid_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Login endpoints with stricter rate limiting
        location /api/login {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://cid_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://cid_app;
            proxy_set_header Host $host;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://cid_app;
            proxy_set_header Host $host;
        }

        # Block access to sensitive files
        location ~ /\.(env|git|htaccess|htpasswd) {
            deny all;
            return 404;
        }

        location ~ /(scripts|backups|logs)/ {
            deny all;
            return 404;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Enhanced HTTPS server with secure TLS configuration
    server {
        listen 443 ssl http2;
        server_name cid-staging.tspolice.gov.in cid.tspolice.gov.in localhost cid-telangana.local;

        # SSL Certificate Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Enhanced TLS Security Configuration
        # ONLY TLS 1.2 and TLS 1.3 (disable TLS 1.0, TLS 1.1, SSL 2.0, SSL 3.0)
        ssl_protocols TLSv1.2 TLSv1.3;

        # Secure cipher suites only (disable weak ciphers)
        # Disabled: SSL, MD5, SHA1, RC4, 3DES, CBC (weak), DES, NULL, EXPORT
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # Prefer server cipher order for security
        ssl_prefer_server_ciphers on;

        # Enhanced SSL Security Settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # OCSP Stapling for certificate validation
        ssl_trusted_certificate /etc/nginx/ssl/cert.pem;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Enhanced Security Headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; connect-src 'self'; media-src 'self';" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Host Header Validation for HTTPS
        if ($host !~* ^(cid-staging\.tspolice\.gov\.in|cid\.tspolice\.gov\.in|localhost|127\.0\.0\.1|cid-telangana\.local|.*\.replit\.app|.*\.replit\.dev)$) {
            return 403;
        }

        # Block insecure HTTP methods (CWE-749)
        if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS)$ ) {
            return 405;
        }

        # Block TRACE and TRACK methods specifically
        if ($request_method ~ ^(TRACE|TRACK)$ ) {
            return 405;
        }

        # Root location - proxy to Node.js app
        location / {
            proxy_pass http://cid_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://cid_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Login endpoints with stricter rate limiting
        location /api/login {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://cid_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Static files caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://cid_app;
            proxy_set_header Host $host;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://cid_app;
            proxy_set_header Host $host;
        }

        # Block access to sensitive files
        location ~ /\.(env|git|htaccess|htpasswd) {
            deny all;
            return 404;
        }

        location ~ /(scripts|backups|logs)/ {
            deny all;
            return 404;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}