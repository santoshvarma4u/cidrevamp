version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: cid-postgres-dev
    environment:
      POSTGRES_DB: ciddb_dev
      POSTGRES_USER: ciduser
      POSTGRES_PASSWORD: cidpassword
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database_export.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./scripts/backup:/scripts:ro
    ports:
      - "5433:5432"
    networks:
      - cid-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ciduser -d ciddb_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin - Web-based PostgreSQL Administration (Development)
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: cid-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cid.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5051:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - cid-dev-network
    depends_on:
      postgres-dev:
        condition: service_healthy
    restart: unless-stopped

  # Development App (hot reload enabled)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: cid-app-dev
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://ciduser:cidpassword@postgres-dev:5432/ciddb_dev
      SESSION_SECRET: dev-session-secret-key
    ports:
      - "5001:5000"
    volumes:
      - .:/app
      - /app/node_modules
      - dev_uploads:/app/uploads
    networks:
      - cid-dev-network
    depends_on:
      postgres-dev:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

  # Database Backup Service
  db-backup:
    image: postgres:15-alpine
    container_name: cid-backup
    environment:
      PGPASSWORD: cidpassword
    volumes:
      - ./backups:/backups
      - ./scripts/backup:/scripts:ro
    networks:
      - cid-dev-network
    depends_on:
      postgres-dev:
        condition: service_healthy
    entrypoint: /scripts/backup.sh
    profiles:
      - backup

volumes:
  postgres_dev_data:
    driver: local
  dev_uploads:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  cid-dev-network:
    driver: bridge