version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cid-postgres-prod
    environment:
      POSTGRES_DB: ciddb_prod
      POSTGRES_USER: ciduser
      POSTGRES_PASSWORD: ${DB_PASSWORD:-CHANGE_THIS_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./database_export.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - cid-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ciduser -d ciddb_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: cid-app-prod
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://ciduser:${DB_PASSWORD:-CHANGE_THIS_PASSWORD}@postgres:5432/ciddb_prod
      SESSION_SECRET: ${SESSION_SECRET:-CHANGE_THIS_SESSION_SECRET}
    ports:
      - "5000:5000"
    volumes:
      - app_uploads_prod:/app/uploads
    networks:
      - cid-network-prod
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data_prod:
    driver: local
  app_uploads_prod:
    driver: local

networks:
  cid-network-prod:
    driver: bridge